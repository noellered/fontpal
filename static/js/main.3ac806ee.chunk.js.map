{"version":3,"sources":["Dropdown.js","Header.js","Body.js","App.js","serviceWorker.js","index.js"],"names":["Dropdown","className","placeholder","value","this","props","onChange","options","styles","menuIsOpen","open","formatGroupLabel","Component","gradients","label","weights","Header","hideItems","e","preventDefault","console","log","target","setState","prevState","showSSInfo","showSerifInfo","showDisplayInfo","showHandwritingInfo","showMonoInfo","state","fonts","categories","sansSerif","serif","handwriting","display","monospace","limit","fetch","then","res","json","JSON","items","map","item","family","category","sansSerifFonts","serifFonts","handwritingFonts","displayFonts","monospaceFonts","i","push","WebFont","load","google","families","customStyles","option","data","isFocused","isDisabled","isSelected","fontFamily","fontname","outline","color","backgroundColor","control","provided","border","fontSize","minHeight","groupStyles","justifyContent","marginRight","style","onClick","groupedOptions","onHeaderChange","headerLabel","margin","key","onHeaderWeightChange","icon","faFont","size","paddingTop","paddingLeft","paddingRight","width","type","min","max","step","headerSize","defaultValue","onHeaderSizeChange","onBodyChange","bodyLabel","onBodyWeightChange","bodySize","onBodySizeChange","lineHeight","onLineHeightChange","onGradientChange","React","HeaderText","userInput","handleUserInput","spellcheck","fontWeight","SpanText","Body","headerValue","bodyValue","myGradient","headerFontWeight","bodyFontWeight","handleHeaderChange","fontChoice","handleBodyChange","handleGradientChange","selectedOption","headerWeightChange","bodyWeightChange","handleLineHeightChange","handleHeaderSizeChange","handleBodySizeChange","flexDirection","flexGrow","paddingBottom","bottom","textTransform","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3ac806ee.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Select from 'react-select';\n\n\nclass Dropdown extends Component {\n\n    render(){\n        \n        return(\n            <form className=\"textSelectors\">\n              <Select \n                placeholder=\"Choose a Family...\" \n                className=\"selector\" \n                value={this.props.value} \n                onChange={this.props.onChange} \n                options={this.props.options} \n                styles={this.props.styles} \n                menuIsOpen={this.props.open}\n                formatGroupLabel={this.props.formatGroupLabel}\n              />\n            </form>\n  \n        );\n    }\n}\n\nexport default Dropdown;","import React from 'react';\nimport Dropdown from './Dropdown';\nimport Select from 'react-select';\nimport WebFont from 'webfontloader';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFont, faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport FormatLineSpacingRoundedIcon from '@material-ui/icons/FormatLineSpacingRounded';\n\n\nconst gradients = [\n    {value: 'blue', label: 'Blue'}, \n    {value: 'seafoam', label: 'Seafoam'},\n    {value: 'purple', label: 'Purple'},\n    {value: 'orange', label: 'Orange'},\n    {value: 'magenta', label: 'Magenta'},\n    {value: 'bubblegum', label: 'Bubblegum'},\n    {value:'sherbet', label: 'Sherbet'},\n    {value: 'violet', label: 'Violet'},\n    {value: 'forest', label: 'Forest'},\n    {value: 'dreamy', label: 'Dreamy'},\n    {value: 'wine', label: 'Wine'},\n    {value: 'fire', label: 'Fire'}\n]\n\nconst weights = [\n  {value: '100', label: 'Thin'},\n  {value: '300', label: 'Light'},\n  {value: '400', label: 'Regular'},\n  {value: '500', label: 'Medium'},\n  {value: '700', label: 'Bold'},\n  {value: '900', label: 'Black'}\n]\n\nclass Header extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          fonts: [],\n          categories: [],\n          sansSerif: [],\n          serif: [],\n          handwriting: [],\n          display: [],\n          monospace: [],\n          limit: 150,\n          showSSInfo: true,\n          showSerifInfo: true,\n          showDisplayInfo: true,\n          showHandwritingInfo: true,\n          showMonoInfo: true\n        }\n      }\n      \n    hideItems = (e) => {\n        e.preventDefault();\n        console.log(`you clicked ${e.target.value} button!`);\n        if(e.target.value === \"Sans-Serif\"){\n            this.setState(prevState => ({showSSInfo: !prevState.showSSInfo}));\n        } else if(e.target.value === \"Serif\"){\n            this.setState(prevState => ({showSerifInfo: !prevState.showSerifInfo}));\n        } else if (e.target.value === \"Display\"){\n            this.setState(prevState => ({showDisplayInfo: !prevState.showDisplayInfo}));\n        } else if (e.target.value === \"Handwriting\"){\n            this.setState(prevState => ({showHandwritingInfo: !prevState.showHandwritingInfo}));\n        }\n        else if (e.target.value === \"Monospace\"){\n            this.setState(prevState => ({showMonoInfo: !prevState.showMonoInfo}));\n        }\n        \n    }\n    \n    //Fetches Google Fonts by popularity and sets fonts state to array of all google font family names - limited to 100 by default\n      componentDidMount(){\n        fetch('https://www.googleapis.com/webfonts/v1/webfonts?sort=popularity&key=AIzaSyDSHr-iLuL_U335Y437hDvqNFSuv1jAkSI')\n          .then(res => {\n              return res.json();\n          }).then((JSON) => {\n            this.setState({\n              fonts: JSON.items.map(item => item.family),\n              categories: JSON.items.map(item => item.category)\n            });\n    \n            \n            const sansSerifFonts = [];\n            const serifFonts = [];\n            const handwritingFonts = [];\n            const displayFonts = [];\n            const monospaceFonts = [];\n    \n            //iterate through fonts array and categorize fonts by type (limited to 100 by default)\n            for(var i=0; i < this.state.limit; i++){\n              if(this.state.categories[i] === \"sans-serif\"){\n                sansSerifFonts.push(this.state.fonts[i]);\n              } else if(this.state.categories[i] === \"serif\"){\n                serifFonts.push(this.state.fonts[i]);\n              } else if(this.state.categories[i] === \"handwriting\"){\n                handwritingFonts.push(this.state.fonts[i]);\n              } else if(this.state.categories[i] === \"display\"){\n                displayFonts.push(this.state.fonts[i]);\n              } else if(this.state.categories[i] === \"monospace\"){\n                monospaceFonts.push(this.state.fonts[i]);\n              }\n            }\n            for(let i=0; i < this.state.limit; i++){\n              WebFont.load({ //loads webfont from Google \n                google: {\n                    families: [`${this.state.fonts[i]}:100,300,400,500,700,900`]\n                }\n            });\n            }\n            this.setState({\n              sansSerif: sansSerifFonts,\n              serif: serifFonts,\n              handwriting: handwritingFonts,\n              display: displayFonts,\n              monospace: monospaceFonts\n            })\n          })\n          console.log(this.state.fonts);\n      }\n\n\n    render(){\n        const customStyles = {\n            option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n              return {\n                  ...styles,\n                  fontFamily: data.fontname,\n                  outline: 'none',\n                  display: data.display,\n                  color: 'black',\n                  backgroundColor: isSelected ? 'rgb(194, 226, 255)' :isFocused ? 'rgb(217, 237, 255)' : null\n              };\n          },\n          control: (provided) => ({\n            ...provided,\n            border: 'none',\n            fontSize: '.8rem !important',\n            minHeight: '20px'\n          })\n        }\n\n        const groupStyles = {\n            display: 'flex',\n            justifyContent: 'space-between',\n            marginRight: '10px'\n          };\n\n        const formatGroupLabel = data => (\n            <div>  \n                <button style={groupStyles} onClick={this.hideItems} value={data.label}>\n                    {data.label}\n                </button>\n            </div>\n        );\n\n        const sansSerifFonts = this.state.sansSerif.map(family => ({value: family, label: family, fontname: family, display: this.state.showSSInfo ? 'block' : 'none'}));\n        const serifFonts = this.state.serif.map(family => ({value: family, label: family, fontname: family, display: this.state.showSerifInfo ? 'block' : 'none'}));\n        const displayFonts = this.state.display.map(family => ({value: family, label: family, fontname: family, display: this.state.showDisplayInfo ? 'block' : 'none'}));\n        const handwritingFonts = this.state.handwriting.map(family => ({value: family, label: family, fontname: family, display: this.state.showHandwritingInfo ? 'block' : 'none'}));\n        const monospaceFonts = this.state.monospace.map(family => ({value: family, label: family, fontname: family, display: this.state.showMonoInfo ? 'block' : 'none'}));\n        const groupedOptions = [\n          {\n            label: 'Sans-Serif',\n            options: sansSerifFonts\n          },\n          {\n            label: 'Serif',\n            options: serifFonts\n          },\n          {\n            label: 'Display',\n            options: displayFonts\n          },\n          {\n            label: 'Handwriting',\n            options: handwritingFonts\n          },\n          {\n            label: 'Monospace',\n            options: monospaceFonts\n          }\n        ];\n        \n        return(\n                <header>\n                    <div className=\"form-container\">\n                      <label>Header:</label>\n                        <Dropdown onChange={this.props.onHeaderChange} value={this.props.headerLabel} options={groupedOptions} styles={customStyles} formatGroupLabel={formatGroupLabel}/>\n                        <span style={{display: 'block', margin: '6px'}}/>\n                        <Select placeholder=\"Choose a Weight...\" key=\"headerWeight\" className=\"selector\" value={this.props.value} onChange={this.props.onHeaderWeightChange} options={weights} styles={customStyles}/>\n                        <div className=\"font-slider\">\n                          <FontAwesomeIcon icon={faFont} size=\"xs\" style={{display: 'inline-block', paddingTop: '8px', color: 'white'}}/>\n                          <FontAwesomeIcon icon={faFont} size=\"lg\" style={{display: 'inline-block', paddingLeft: '3px', paddingRight: '10px', color: 'white'}}/>\n                          <input style={{display: 'inline-block', width: '80%'}}\n                              type=\"range\"\n                              className=\"slider\"\n                              min={1}\n                              max={5}\n                              step={.05}\n                              value={this.props.headerSize}\n                              defaultValue={3}\n                              onChange={this.props.onHeaderSizeChange}\n                          />\n                        </div>\n                    </div>\n                    <div className=\"form-container\">\n                      <label>Body:</label>\n                          <Dropdown onChange={this.props.onBodyChange} value={this.props.bodyLabel} options={groupedOptions} styles={customStyles} formatGroupLabel={formatGroupLabel}/>\n                          <span style={{display: 'block', margin: '6px'}}/>\n                          <Select placeholder=\"Choose a Weight...\" key=\"bodyWeight\" className=\"selector\" value={this.props.value} onChange={this.props.onBodyWeightChange} options={weights} styles={customStyles} />\n                          <div className=\"font-slider\">\n                            <FontAwesomeIcon icon={faFont} size=\"xs\" style={{display: 'inline-block', paddingTop: '8px', color: 'white'}}/>\n                            <FontAwesomeIcon icon={faFont} size=\"lg\" style={{display: 'inline-block', paddingLeft: '3px', paddingRight: '10px', color: 'white'}}/>\n                            <input style={{display: 'inline-block', width: '80%'}}\n                                type=\"range\"\n                                className=\"slider\"\n                                min={1}\n                                max={5}\n                                step={.05}\n                                value={this.props.bodySize}\n                                defaultValue={1.5}\n                                onChange={this.props.onBodySizeChange}\n                            />\n                        </div>\n                        <div className=\"font-slider\">\n                        <FormatLineSpacingRoundedIcon style={{display: 'inline-block', paddingRight: '15px', color: 'white'}}/>\n                        <input style={{width: '90%'}}\n                            type=\"range\"\n                            className=\"slider\"\n                            min={1}\n                            max={2.5}\n                            step={.05}\n                            value={this.props.lineHeight}\n                            defaultValue={1.5}\n                            onChange={this.props.onLineHeightChange}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-container\">\n                      <label>Background:</label>\n                      <Select placeholder=\"Choose a Gradient...\" className=\"selector\" value={this.props.value} onChange={this.props.onGradientChange} options={gradients} styles={customStyles}/>\n                    </div>\n                </header>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport Header from './Header';\nimport WebFont from 'webfontloader';\nimport TextareaAutosize from 'react-autosize-textarea';\n\n\n//Renders Header Text -- accepts fontFamily as prop\nclass HeaderText extends Component {\n\n    state = {\n        userInput: \"Welcome to FontPal Beta!\"\n    }\n\n    handleUserInput = (e) => {\n        this.setState({userInput: e.target.value});\n    } \n\n    render(){\n        return(\n           <TextareaAutosize value={this.state.userInput} onChange={this.handleUserInput} key={this.props.fontFamily} spellcheck=\"false\" className=\"header-text\" style={{fontFamily: this.props.fontFamily, fontWeight: this.props.fontWeight, fontSize: `${this.props.headerSize}rem`}}></TextareaAutosize>\n        );\n    }\n}\n\n//Renders Span / Body Text -- accepts fontFamily as prop\nclass SpanText extends Component {\n    render(){\n        const defaultText = \"This is a font pairing app for Google Web Fonts. The text on this page is editable, so go ahead and try putting in your own. You can change the font family, size, weight, and line height. You can click on the font category name to collapse the corresponding group in the dropdown (an indicator for this is in the works). Don't forget to check out the pre-loaded background gradients for some extra flare! \\n \\nAs noted above, this is a Beta version. Features are constantly being added, so check back now and then to see what cool new features you can play around with. Happy pairing!\"\n        return(\n            <TextareaAutosize spellcheck=\"false\" className=\"body-text\" style={{fontFamily: this.props.fontFamily, fontWeight: this.props.fontWeight, lineHeight: this.props.lineHeight, fontSize: `${this.props.bodySize}rem`}}>{defaultText}</TextareaAutosize>\n        );\n    }\n}\n\n\n//Combines HeaderText and SpanText into one stylized div\nclass Body extends Component {\n\n    state = {\n        headerValue: '',\n        bodyValue: '',\n        myGradient: 'blue',\n        headerLabel: '', //set labels to selected value\n        bodyLabel: '',\n        headerFontWeight: '700',\n        bodyFontWeight: '300',\n        lineHeight: '1.5',\n        headerSize: '3',\n        bodySize: '1.5'\n    }\n\n    //Sets font choice for Header text\n    handleHeaderChange = (e) => {\n        let fontChoice = e.value;\n        this.setState({headerValue: fontChoice, headerLabel: e});\n    }\n\n\n    //Sets font choice for Body text\n    handleBodyChange = (e) => {\n        let fontChoice = e.value;\n        this.setState({bodyValue: fontChoice, bodyLabel: e});\n    }\n    \n\n    //Sets gradient to selected \n    handleGradientChange = selectedOption => {\n        this.setState({myGradient: selectedOption.value});\n      };\n\n    //Sets font weight\n    headerWeightChange = selectedOption => {\n        this.setState({headerFontWeight: selectedOption.value})\n    }\n\n    bodyWeightChange = selectedOption => {\n        this.setState({bodyFontWeight: selectedOption.value})\n    }\n\n    //Sets line height for body text\n    handleLineHeightChange = (e) => {\n        this.setState({lineHeight: e.target.value})\n    }\n\n    handleHeaderSizeChange = (e) => {\n        this.setState({headerSize: e.target.value})\n    }\n\n    handleBodySizeChange = (e) => {\n        this.setState({bodySize: e.target.value})\n    }\n\n\n    render(){\n        const footerStyle = {\n                display: 'block', \n                width: '100%', \n                paddingTop: '100px', \n                paddingBottom: '50px', \n                bottom: '0', \n                fontSize: '.6rem', \n                color: 'white', \n                textTransform: 'uppercase'\n        };\n        return(\n            <div>\n                <div className={`body-div ${this.state.myGradient}`}> \n                    <div style={{display: 'flex', flexDirection: 'row'}}> \n                        <Header \n                            onHeaderChange={this.handleHeaderChange} \n                            onHeaderWeightChange={this.headerWeightChange} \n                            onBodyWeightChange={this.bodyWeightChange} \n                            headerValue={this.state.headerValue} \n                            onBodyChange={this.handleBodyChange} \n                            bodyValue={this.state.bodyValue} \n                            onGradientChange={this.handleGradientChange}\n                            onLineHeightChange={this.handleLineHeightChange}\n                            onHeaderSizeChange={this.handleHeaderSizeChange}\n                            onBodySizeChange={this.handleBodySizeChange}\n                            style={{display: 'inline', flexGrow: '1'}}\n                        />\n                        <div className=\"preview-area\">\n                            <HeaderText fontFamily={this.state.headerValue} fontWeight={this.state.headerFontWeight} headerSize={this.state.headerSize}/>\n                            <SpanText fontFamily={this.state.bodyValue} fontWeight={this.state.bodyFontWeight} lineHeight={this.state.lineHeight} bodySize={this.state.bodySize}/>\n                            <div style={footerStyle}>Created by <a href=\"https://noellered.com\" target=\"_blank\">NoelleRed</a></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Body;","import React, {Component} from 'react';\nimport Body from './Body';\nimport 'normalize.css';\nimport './App.css';\n\nclass App extends Component  {\n  render(){\n\n    return (\n      <div className=\"full-height\">\n        <Body />  \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}